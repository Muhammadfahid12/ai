name: CI/CD for Django based App

on:
  push:
    branches:
      - master
  pull_request:    ## need to review
    branches:
      - master


jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Git Checkout
      uses: actions/checkout@v3
    
    - name: Python Environment Setup
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
        # cache: pip


    # - name: Setup venv for Python
    #   run: |
    #     python -m venv venv
    #     source venv/bin/activate

    - name: Install Dependencies
      run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi


    - name: Lint Python Code with Pylint
      run: |
        pip install pylint
        pylint . # Point pylint to your actual Python code directory

  #   ## caching dependencies

  #   - name: Cache Pip Dependencies
  #     uses: actions/cache@v3
  #     with:
  #       path: ~/.cache/pip
  #       key: ${{ runner.os }}-pip-{{ $hashFiles('**/requirements.txt') }}
  #       restore-keys: |
  #        ${{ runner.os }}-pip-

  #   # - name: Run Tests and generate coverage
  #   #   run: |
  #   #     pip install coverage
  #   #     coverage run -m pytest

  security:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Git Checkout
      uses: actions/checkout@v3

    - name: Installing Trivy on Ubuntu Runner 
      run: |
        sudo apt-get install wget apt-transport-https gnupg lsb-release
        wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
        echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
        sudo apt-get update -y
        sudo apt-get install trivy -y

    - name: Trivy FS Scan
      run: trivy fs --format table -o fs-report.json . 
 
    - name: Git leaks scan it is used for hardcoded sensitive data
      run: sudo apt install gitleaks -y  

    - name: Git Leaks Code Scan
      run: gitleaks detect source . -r gitleaks-report.json -f json

  # sonarQube:
  #   runs-on: ubuntu-latest
  #   needs: security

  #   steps:
  #     - 